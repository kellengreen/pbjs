{
  "version": 3,
  "sources": ["../../src/store/custom.js"],
  "sourcesContent": ["const store = new Store();\nstore.set([\"a\", \"b\", \"c\"], 10);\nstore.get([\"a\", \"b\", \"c\"]);\nstore.listen([\"a\", \"b\", \"c\"], () => {});\nstore.ignore([\"a\", \"b\", \"c\"], () => {});\n\nstore.a.b = 10;\nstore.a.b.c; // undefined\nstore.a.b.c.listen(() => {});\n\nclass Node {\n  /**\n   *\n   * @param {Object} data\n   */\n  constructor(data = {}) {\n    this.parent = undefined;\n    this.data = init;\n    this.childListeners = new WeakMap();\n  }\n\n  /**\n   *\n   * @param {*} keys\n   * @param {*} value\n   */\n  set(keys, value) {\n    for (const key of keys) {\n    }\n  }\n\n  /**\n   *\n   * @name IDontReallyExist\n   * @function\n   * @param {String} someParameter Description\n   *\n   *\n   * @param {string[]} keys\n   * @param {function name(params)\n   * @returns {undefined}\n   */\n  listen(keys) {}\n\n  /**\n   *\n   * @param {string[]} keys\n   * @returns {*}\n   */\n  get(keys) {}\n}\n\nconst listen = Symbol(\"listen\");\nconst ignore = Symbol(\"ignore\");\nconst listeners = Symbol(\"listeners\");\nconst parent = Symbol(\"parent\");\n\n/*\nroot = {\n  a: {\n    b: {\n      c: 0\n    }\n  }\n  d: 0\n}\n\nchange\n  a\n    a\n    b\n    c\n  b\n    b\n    c\n  c\n    c\n  d\n    d\n*/\n"],
  "mappings": "AAAA,KAAM,OAAQ,GAAI,OAClB,MAAM,IAAI,CAAC,IAAK,IAAK,KAAM,IAC3B,MAAM,IAAI,CAAC,IAAK,IAAK,MACrB,MAAM,OAAO,CAAC,IAAK,IAAK,KAAM,IAAM,IACpC,MAAM,OAAO,CAAC,IAAK,IAAK,KAAM,IAAM,IAEpC,MAAM,EAAE,EAAI,GACZ,MAAM,EAAE,EAAE,EACV,MAAM,EAAE,EAAE,EAAE,OAAO,IAAM,IAEzB,UAAW,CAKT,YAAY,EAAO,GAAI,CACrB,KAAK,OAAS,OACd,KAAK,KAAO,KACZ,KAAK,eAAiB,GAAI,SAQ5B,IAAI,EAAM,EAAO,CACf,SAAW,KAAO,GAAM,EAe1B,OAAO,EAAM,EAOb,IAAI,EAAM,GAGZ,KAAM,QAAS,OAAO,UAChB,OAAS,OAAO,UAChB,UAAY,OAAO,aACnB,OAAS,OAAO",
  "names": []
}
