const listeners=Symbol("listeners"),addEventListener=Symbol("addEventListener"),removeEventListener=Symbol("removeEventListener");function addEventListenerFn(e,n){console.log(this)}function removeEventListenerFn(e,n){console.log(this)}const handlers={get:(e,n,t)=>{console.log(`get: ${n.toString()}`);const s=Reflect.get(e,n,t);return s instanceof Function?s.bind(e):s},set:(e,n,t,s)=>(console.log(`set: ${n.toString()}`),t instanceof Object?e[n]=wrapObject(t):e[n]=wrapPrimitive(t),Reflect.set(e,n,t,s))};function wrapObject(e){return e[listeners]=new Set,e[addEventListener]=addEventListenerFn,e[removeEventListener]=removeEventListenerFn,new Proxy(e,handlers)}function wrapPrimitive(e){}globalThis.$=wrapObject({a:0}),globalThis.ael=addEventListener,globalThis.rel=removeEventListener,console.dir($);
//# sourceMappingURL=proxy.js.map
